// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dist_PBAL
NumericMatrix dist_PBAL(NumericMatrix d);
RcppExport SEXP _REpiclomal_dist_PBAL(SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(dist_PBAL(d));
    return rcpp_result_gen;
END_RCPP
}
// impute_means
NumericMatrix impute_means(NumericMatrix input_data);
RcppExport SEXP _REpiclomal_impute_means(SEXP input_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type input_data(input_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(impute_means(input_data));
    return rcpp_result_gen;
END_RCPP
}
// impute_medians
IntegerMatrix impute_medians(IntegerMatrix input_data);
RcppExport SEXP _REpiclomal_impute_medians(SEXP input_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type input_data(input_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(impute_medians(input_data));
    return rcpp_result_gen;
END_RCPP
}
// find_variable_region
bool find_variable_region(int r, IntegerVector cluster_set, DataFrame estimate_epi, int rstart, int rend);
RcppExport SEXP _REpiclomal_find_variable_region(SEXP rSEXP, SEXP cluster_setSEXP, SEXP estimate_epiSEXP, SEXP rstartSEXP, SEXP rendSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type cluster_set(cluster_setSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type estimate_epi(estimate_epiSEXP);
    Rcpp::traits::input_parameter< int >::type rstart(rstartSEXP);
    Rcpp::traits::input_parameter< int >::type rend(rendSEXP);
    rcpp_result_gen = Rcpp::wrap(find_variable_region(r, cluster_set, estimate_epi, rstart, rend));
    return rcpp_result_gen;
END_RCPP
}
// impute_missing_data
void impute_missing_data(IntegerMatrix meth_data, IntegerMatrix data_estimate_corr, DataFrame estimate_Z, int rstart, int rend, bool variable_region);
RcppExport SEXP _REpiclomal_impute_missing_data(SEXP meth_dataSEXP, SEXP data_estimate_corrSEXP, SEXP estimate_ZSEXP, SEXP rstartSEXP, SEXP rendSEXP, SEXP variable_regionSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type meth_data(meth_dataSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type data_estimate_corr(data_estimate_corrSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type estimate_Z(estimate_ZSEXP);
    Rcpp::traits::input_parameter< int >::type rstart(rstartSEXP);
    Rcpp::traits::input_parameter< int >::type rend(rendSEXP);
    Rcpp::traits::input_parameter< bool >::type variable_region(variable_regionSEXP);
    impute_missing_data(meth_data, data_estimate_corr, estimate_Z, rstart, rend, variable_region);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_REpiclomal_dist_PBAL", (DL_FUNC) &_REpiclomal_dist_PBAL, 1},
    {"_REpiclomal_impute_means", (DL_FUNC) &_REpiclomal_impute_means, 1},
    {"_REpiclomal_impute_medians", (DL_FUNC) &_REpiclomal_impute_medians, 1},
    {"_REpiclomal_find_variable_region", (DL_FUNC) &_REpiclomal_find_variable_region, 5},
    {"_REpiclomal_impute_missing_data", (DL_FUNC) &_REpiclomal_impute_missing_data, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_REpiclomal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
