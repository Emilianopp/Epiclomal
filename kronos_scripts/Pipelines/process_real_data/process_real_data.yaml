__PIPELINE_INFO__: 
    name: 'process_real_data'
    version: '1.0.0'
    author: 'mandronescu@bccrc.ca'
    data_type: null
    input_type: ''
    output_type: 'tsv'
    host_cluster: 
    date_created: '2017-12-07'
    factory_version: '2.1.0'
__GENERAL__: 
__SHARED__:
__SAMPLES__:
################################################################################
__TASK_1_GET_CPGS_IN_REGIONS__: 
    reserved: 
        # do not change this section.
        component_name: 'get_cpgs_in_regions'
        component_version: '0.99.0'
        seed_version: '0.99.0'
    run:
        use_cluster: ('__SHARED__', 'use_cluster')
        memory: ('__SHARED__', 'memory')
        num_cpus: 1
        forced_dependencies: []
        add_breakpoint: False
        env_vars:
            R_LIBS: ('__SHARED__', 'r_libs')
            LD_LIBRARY_PATH: ('__SHARED__', 'ld_library_path')
            PATH: ('__SHARED__', 'path')
        boilerplate: 
        parallel_run: True
        parallel_params: []
        interval_file: ('__SAMPLES__', 'chr_interval')    
        requirements:
            get_cpgs_in_regions:    
        merge: False    
    component:
        input_files:
        output_files: 
            output_directory: ('__SHARED__', 'task1_output')
        parameters: 
            regions_file: ('__SHARED__', 'regions')
            name_regions: ('__SHARED__', 'data_ID')
            genome_library: ('__SHARED__', 'genome_library')
            type_of_C: ('__SHARED__', 'type_of_C')
################################################################################
__TASK_2_GET_CPGS_IN_CELLS__: 
    reserved: 
        # do not change this section.
        component_name: 'get_cpgs_in_cells'
        component_version: '0.99.0'
        seed_version: '0.99.0'
    run:
        use_cluster: ('__SHARED__', 'use_cluster')
        memory: ('__SHARED__', 'memory')
        num_cpus: 1
        forced_dependencies: ['__TASK_1_GET_CPGS_IN_REGIONS__']
        add_breakpoint: False
        env_vars:
            R_LIBS: ('__SHARED__', 'r_libs')
            LD_LIBRARY_PATH: ('__SHARED__', 'ld_library_path')
            PATH: ('__SHARED__', 'path')
        boilerplate: 
        parallel_run: True
        parallel_params: []
        interval_file: ('__SAMPLES__', 'cell_interval')  
        requirements:
            get_cpgs_in_cells:     
        merge: False
    component:
        input_files:
        output_files: 
            output_directory: ('__SHARED__', 'task2_output')
        parameters: 
            path_cell_data: ('__SHARED__', 'cell_data_dir')        
            data_ID: ('__SHARED__', 'data_ID')
            path_CpG_coordinates: ('__SHARED__', 'task1_output')
            data_type: ('__SHARED__', 'data_type')
            genome: ('__SHARED__', 'genome')
            include_chrY: ('__SHARED__', 'include_chrY')
################################################################################
__TASK_3_GET_CPG_STATS_PER_CELL__: 
    reserved: 
        # do not change this section.
        component_name: 'get_cpg_stats_per_cell'
        component_version: '0.99.0'
        seed_version: '0.99.0'
    run:
        use_cluster: ('__SHARED__', 'use_cluster')
        memory: ('__SHARED__', 'memory')
        num_cpus: 1
        forced_dependencies: ['__TASK_2_GET_CPGS_IN_CELLS__']
        add_breakpoint: False
        env_vars:
            R_LIBS: ('__SHARED__', 'r_libs')
            LD_LIBRARY_PATH: ('__SHARED__', 'ld_library_path')
            PATH: ('__SHARED__', 'path')
        boilerplate: 
        parallel_run: True
        parallel_params: []
        interval_file: ('__SAMPLES__', 'cell_interval')        
        requirements:
            get_cpg_stats_per_cell:
        merge: False    
    component:
        input_files:
        output_files: 
            output_directory: ('__SHARED__', 'task3_output')
        parameters: 
            data_ID: ('__SHARED__', 'data_ID')
            path_post_processed_CpG_data: ('__SHARED__', 'task2_output')
################################################################################
__TASK_4_GET_CPG_STATS_ALL_CELLS__: 
    reserved: 
        # do not change this section.
        component_name: 'get_cpg_stats_all_cells'
        component_version: '0.99.0'
        seed_version: '0.99.0'
    run:
        use_cluster: ('__SHARED__', 'use_cluster')
        memory: ('__SHARED__', 'memory')
        num_cpus: 1
        forced_dependencies: ['__TASK_3_GET_CPG_STATS_PER_CELL__']
        add_breakpoint: False
        env_vars:
            R_LIBS: ('__SHARED__', 'r_libs')
            LD_LIBRARY_PATH: ('__SHARED__', 'ld_library_path')
            PATH: ('__SHARED__', 'path')
        boilerplate: 
        parallel_run: True
        parallel_params: []
        interval_file: ('__SAMPLES__', 'cutoff_interval')        
        requirements:
            get_cpg_stats_all_cells:
        merge: False    
    component:
        input_files:
            path_post_processed_CpG_data: ('__SHARED__', 'task2_output')
            path_stats_region_data: ('__SHARED__', 'task3_output')
        output_files: 
            output_directory: ('__SHARED__', 'task4_output')
        parameters: 
            data_ID: ('__SHARED__', 'data_ID')
            plot_heatmap_unfiltered: ('__SHARED__', 'plot_heatmap_unfiltered')
            plot_heatmap_filtered: 1   
            filter_regions_same_meth: 1
            same_meth_cutoff: 0.05
################################################################################
__TASK_5_PREPARE_DATA_FOR_EPICLOMAL__: 
    reserved: 
        # do not change this section.
        component_name: 'prepare_data_for_epiclomal'
        component_version: '0.99.0'
        seed_version: '0.99.0'
    run:
        use_cluster: ('__SHARED__', 'use_cluster')
        memory: ('__SHARED__', 'memory')
        num_cpus: 1
        forced_dependencies: ['__TASK_4_GET_CPG_STATS_ALL_CELLS__']
        add_breakpoint: False
        env_vars:
            R_LIBS: ('__SHARED__', 'r_libs')
            LD_LIBRARY_PATH: ('__SHARED__', 'ld_library_path')
            PATH: ('__SHARED__', 'path')
        boilerplate: 
        parallel_run: True
        parallel_params: []
        interval_file: ('__SAMPLES__', 'cutoff_interval')
        requirements:
            prepare_data_for_epiclomal:
        merge: False    
    component:
        input_files:
            path_post_processed_CpG_data: ('__SHARED__', 'task2_output')
            file_final_regions: ('__SHARED__', 'task4_final_regions')
        output_files: 
            output_directory: ('__SHARED__', 'task5_output')
        parameters: 
            data_ID: ('__SHARED__', 'data_ID')
################################################################################

